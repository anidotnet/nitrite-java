/*
 * Copyright (c) 2017-2020. Nitrite author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'signing'
    id 'maven'
    id 'com.github.hauner.jarTest'
    id 'jacoco'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
    archivesBaseName = 'nitrite'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(path: ':nitrite-core', configuration: 'default')
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "com.h2database:h2-mvstore:$h2Version"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testImplementation "uk.co.jemos.podam:podam:$podamVersion"
    testImplementation "com.github.javafaker:javafaker:$javaFakerVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.openjdk.jmh:jmh-core:$jmhVersion"
    testImplementation "org.apache.lucene:lucene-core:$luceneVersion"
    testImplementation "org.apache.lucene:lucene-analyzers-common:$luceneVersion"
    testImplementation "org.apache.lucene:lucene-queryparser:$luceneVersion"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
    testImplementation "org.apache.logging.log4j:log4j-core:$log4j2Version"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "joda-time:joda-time:$jodaTimeVersion"
    testImplementation "org.meanbean:meanbean:$meanbeanVersion"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
}

test {
    testLogging.showStandardStreams = false
    testLogging.exceptionFormat = 'full'
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

check.dependsOn jacocoTestReport