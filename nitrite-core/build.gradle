/*
 *  Copyright 2017-2019 Nitrite author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'signing'
    id 'maven'
    id 'com.github.hauner.jarTest'
}

apply from: 'asciidoc.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
    archivesBaseName = 'nitrite-core'
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.objenesis:objenesis:$objenesisVersion"
//    compile ("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion") {
//        exclude module: 'jackson-annotations'
//    }
//    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "org.jasypt:jasypt:$jasyptVersion"
//    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
//    compile "org.locationtech.jts:jts-core:$jtsVersion"


    testCompile "junit:junit:$junitVersion"
}

gradle.buildFinished { BuildResult result ->
    if (result.failure && !JavaVersion.current().isJava8Compatible()) {
        println("\n* Warning:\nJDK ${JavaVersion.VERSION_1_8} is minimal requirement for building nitrite. " +
                "You have ${JavaVersion.current()}.")
    }
}

test {
    testLogging.showStandardStreams = false
    testLogging.exceptionFormat = 'full'
}